name: Deploy Rancher (NodePort via NPM) - One Click

# Penjelasan AI: concurrency mencegah dua proses deployment berjalan bersamaan sehingga konfigurasi cluster tetap konsisten.
concurrency:
  group: deploy-rancher-${{ github.ref }}
  cancel-in-progress: false

# Penjelasan AI: pembatasan permissions menjaga prinsip least-privilege pada workflow.
permissions:
  contents: read

# Penjelasan AI: default shell bash memberi kontrol penuh atas pengecekan error di setiap script.
defaults:
  run:
    shell: bash

# Penjelasan AI: workflow dapat dipicu manual maupun otomatis saat ada perubahan di konfigurasi yang relevan.
on:
  workflow_dispatch:
    inputs:
      nodePort:
        description: "NodePort (30000-32767) untuk NPM"
        required: false
        default: "32080"
      replicas:
        description: "Jumlah replica Rancher"
        required: false
        default: "2"
  push:
    branches: [ "main" ]
    paths:
      - ".github/workflows/rancher.yaml"
      - "k8s/**"

env:
  NAMESPACE: cattle-system
  RELEASE: rancher
  SELECTOR_LABEL: rancher

jobs:
  deploy:
    name: Deploy Rancher
    runs-on: ubuntu-latest
    env:
      NODEPORT: ${{ github.event.inputs.nodePort || '32080' }}
      RANCHER_REPLICAS: ${{ github.event.inputs.replicas || '2' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Penjelasan AI: validasi awal memastikan secret penting tersedia sebelum melanjutkan proses.
      - name: Validate Rancher secrets
        env:
          KUBECONFIG_B64: ${{ secrets.KUBECONFIG_B64 }}
          RANCHER_HOSTNAME: ${{ secrets.RANCHER_HOSTNAME }}
        run: |
          set -euo pipefail
          if [[ -z "${KUBECONFIG_B64:-}" ]]; then
            echo "Secret KUBECONFIG_B64 belum diset." >&2
            exit 1
          fi
          if [[ -z "${RANCHER_HOSTNAME:-}" ]]; then
            echo "Secret RANCHER_HOSTNAME belum diset." >&2
            exit 1
          fi

      # Penjelasan AI: pemasangan kubectl versi tetap menjaga kompatibilitas dengan cluster target.
      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.29.6

      # Penjelasan AI: pemasangan helm menggunakan versi yang teruji untuk release Rancher terbaru.
      - name: Setup helm
        uses: azure/setup-helm@v4
        with:
          version: v3.15.2

      # Penjelasan AI: pengecekan versi memastikan tooling berhasil ter-install sebelum mengakses cluster.
      - name: Validate client tools
        run: |
          set -euo pipefail
          kubectl version --client
          helm version --short

      - name: Restore kubeconfig
        env:
          KUBECONFIG_B64: ${{ secrets.KUBECONFIG_B64 }}
        run: |
          set -euo pipefail
          echo "$KUBECONFIG_B64" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          kubectl cluster-info
          kubectl get nodes -o wide

      - name: Ensure namespace
        run: |
          set -euo pipefail
          kubectl get ns $NAMESPACE >/dev/null 2>&1 || kubectl create ns $NAMESPACE

      - name: Add Rancher Helm repo
        run: |
          set -euo pipefail
          helm repo add rancher-latest https://releases.rancher.com/server-charts/latest
          helm repo update

      - name: Pre-clean dangling failed installs (optional)
        run: |
          set -euo pipefail
          set -x
          helm ls -n $NAMESPACE --all --filter "^${RELEASE}$" | awk 'NR>1 {print $1}' | \
            xargs -r -I{} helm uninstall {} -n $NAMESPACE || true

      # Penjelasan AI: pengecekan ini memastikan NodePort tidak bentrok dengan service lain di cluster.
      - name: Validate requested NodePort availability
        run: |
          set -euo pipefail
          if kubectl get svc --all-namespaces -o jsonpath='{range .items[*]}{range .spec.ports[*]}{.nodePort}{"\n"}{end}{end}' \
            | grep -Fxq "$NODEPORT"; then
            echo "NodePort $NODEPORT sudah digunakan oleh service lain." >&2
            exit 1
          fi

      - name: Apply NodePort Service (inline)
        run: |
          set -euo pipefail
          # Penjelasan AI: here-doc digunakan agar manifest service NodePort dapat diterapkan tanpa file terpisah.
          cat <<YAML | kubectl apply -f -
          apiVersion: v1
          kind: Service
          metadata:
            name: rancher-nodeport
            namespace: ${NAMESPACE}
            labels:
              app: rancher
          spec:
            type: NodePort
            selector:
              app: ${SELECTOR_LABEL}
            ports:
              - name: http
                port: 80
                targetPort: 80
                nodePort: ${NODEPORT}
          YAML

          echo "Service applied. Current status:"
          kubectl -n $NAMESPACE get svc rancher-nodeport -o wide

      - name: Install/Upgrade Rancher (Ingress off, TLS external)
        env:
          RANCHER_HOSTNAME: ${{ secrets.RANCHER_HOSTNAME }}
          RANCHER_REPLICAS: ${{ env.RANCHER_REPLICAS }}
        run: |
          set -euo pipefail
          helm upgrade --install $RELEASE rancher-latest/rancher \
            -n $NAMESPACE \
            --wait \
            --timeout 15m \
            --set hostname="${RANCHER_HOSTNAME}" \
            --set replicas=${RANCHER_REPLICAS} \
            --set ingress.enabled=false \
            --set tls=external

      - name: Wait rollout Rancher
        run: |
          set -euo pipefail
          kubectl -n $NAMESPACE rollout status deploy/rancher --timeout=10m
          kubectl -n $NAMESPACE get pods -o wide

      - name: Health check (port-forward â†’ /healthz)
        run: |
          set -e
          kubectl -n $NAMESPACE port-forward deploy/rancher 8080:80 >/tmp/pf.log 2>&1 &
          PF_PID=$!
          sleep 3
          curl -fsS http://127.0.0.1:8080/healthz
          kill $PF_PID || true

      - name: Print NodeIPs + NodePort (untuk setting NPM)
        run: |
          set -euo pipefail
          echo "== Candidate Node IPs =="
          kubectl get nodes -o jsonpath='{range .items[*]}{.status.addresses[?(@.type=="InternalIP")].address}{"\t"}{.metadata.name}{"\n"}{end}'
          echo "NodePort:"
          kubectl -n $NAMESPACE get svc rancher-nodeport -o jsonpath='{.spec.ports[0].nodePort}'; echo

      # ===== AUTO CLEANUP JIKA GAGAL =====
      - name: Cleanup on failure
        if: failure()
        run: |
          set -x
          helm uninstall $RELEASE -n $NAMESPACE || true
          kubectl -n $NAMESPACE delete deploy,sts,ds,svc,ing,job,cm,secret -l app=rancher --force --grace-period=0 || true
          kubectl -n $NAMESPACE delete all,cm,secret -l app=rancher-webhook --force --grace-period=0 || true
          kubectl -n fleet-system delete all,cm,secret --all || true
          kubectl delete ns fleet-system --force --grace-period=0 || true
          kubectl -n $NAMESPACE delete svc rancher-nodeport --ignore-not-found=true || true
          kubectl get crd | awk '/fleet/ {print $1}' | xargs -r kubectl delete crd || true
          kubectl delete ns $NAMESPACE --force --grace-period=0 || true
