name: Deploy Rancher (TLS internal / self-signed)

on:
  workflow_dispatch:
    inputs:
      rancher_hostname:
        description: "Domain Rancher (contoh: k8s.madiunkab.go.id)"
        required: true
        default: "k8s.madiunkab.go.id"
      ingress_class:
        description: "Ingress class di cluster (nginx/traefik/haproxy, dll.)"
        required: true
        default: "nginx"
      rancher_version:
        description: "Chart version (atau 'latest')"
        required: true
        default: "latest"
      kube_context:
        description: "Nama context di kubeconfig"
        required: true
        default: "gha"

jobs:
  deploy-rancher:
    runs-on: ubuntu-latest # ganti ke self-hosted kalau perlu
    env:
      KUBE_CONTEXT: ${{ inputs.kube_context }}
      RANCHER_HOSTNAME: ${{ inputs.rancher_hostname }}
      INGRESS_CLASS: ${{ inputs.ingress_class }}
      RANCHER_VERSION: ${{ inputs.rancher_version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "latest"

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: "latest"

      - name: Restore KUBECONFIG
        shell: bash
        env:
          KUBECONFIG_B64: ${{ secrets.KUBECONFIG_B64 }}
          KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG_CONTENT }}
        run: |
          set -euo pipefail
          mkdir -p $HOME/.kube
          if [[ -n "${KUBECONFIG_B64:-}" ]]; then
            echo "$KUBECONFIG_B64" | base64 -d > $HOME/.kube/config
          elif [[ -n "${KUBECONFIG_CONTENT:-}" ]]; then
            echo "$KUBECONFIG_CONTENT" > $HOME/.kube/config
          else
            echo "ERROR: Set secret KUBECONFIG_B64 atau KUBECONFIG_CONTENT" >&2
            exit 1
          fi
          chmod 600 $HOME/.kube/config

          kubectl config use-context "$KUBE_CONTEXT" || true
          echo "== kubectl client version =="; kubectl version --client=true -o yaml || kubectl version --client=true || kubectl version
          echo "== cluster info =="; kubectl cluster-info || true
          echo "== apiserver readiness =="; kubectl get --raw=/readyz?verbose || true
          echo "== nodes =="; kubectl get nodes -o wide

      - name: Add Helm repo (Rancher)
        run: |
          helm repo add rancher-latest https://releases.rancher.com/server-charts/latest
          helm repo update

      - name: Ensure namespace cattle-system
        run: |
          kubectl get ns cattle-system >/dev/null 2>&1 || kubectl create ns cattle-system

      - name: (Rancher) Fail-open admission webhooks (Validating & Mutating)
        shell: bash
        run: |
          set -euo pipefail
          for kind in validatingwebhookconfiguration mutatingwebhookconfiguration; do
            if kubectl get $kind rancher.cattle.io >/dev/null 2>&1; then
              for i in $(seq 0 49); do
                kubectl patch $kind rancher.cattle.io \
                  --type='json' \
                  -p="[{'op':'replace','path':'/webhooks/$i/failurePolicy','value':'Ignore'}]" \
                  >/dev/null 2>&1 || true
              done
            fi
          done

      - name: Install/Upgrade Rancher (TLS self-signed at Ingress)
        env:
          BOOTSTRAP_PASSWORD: ${{ secrets.RANCHER_BOOTSTRAP_PASSWORD }}
        run: |
          set -euo pipefail
          kubectl get ns cattle-system >/dev/null 2>&1 || kubectl create ns cattle-system

          helm repo add rancher-latest https://releases.rancher.com/server-charts/latest
          helm repo update

          helm upgrade --install rancher rancher-latest/rancher \
            --namespace cattle-system \
            --set hostname="${RANCHER_HOSTNAME}" \
            --set ingress.ingressClassName="${INGRESS_CLASS}" \
            --set ingress.tls.source=rancher \
            --set-string ingress.extraAnnotations."nginx\.ingress\.kubernetes\.io/proxy-read-timeout"="3600" \
            --set-string ingress.extraAnnotations."nginx\.ingress\.kubernetes\.io/proxy-send-timeout"="3600" \
            --set-string ingress.extraAnnotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"="20m" \
            ${BOOTSTRAP_PASSWORD:+--set bootstrapPassword="${BOOTSTRAP_PASSWORD}"} \
            --wait --timeout 20m

          echo "Waiting Rancher deployment..."
          kubectl -n cattle-system rollout status deploy/rancher --timeout=15m

          # Tunggu webhook Rancher Available (kalau sudah ada)
          kubectl -n cattle-system wait deploy/rancher-webhook --for=condition=Available --timeout=10m || true

      - name: (Rancher) Restore admission webhooks to Fail
        if: ${{ always() }}
        shell: bash
        run: |
          set -euo pipefail
          for kind in validatingwebhookconfiguration mutatingwebhookconfiguration; do
            if kubectl get $kind rancher.cattle.io >/dev/null 2>&1; then
              for i in $(seq 0 49); do
                kubectl patch $kind rancher.cattle.io \
                  --type='json' \
                  -p="[{'op':'replace','path':'/webhooks/$i/failurePolicy','value':'Fail'}]" \
                  >/dev/null 2>&1 || true
              done
            fi
          done
